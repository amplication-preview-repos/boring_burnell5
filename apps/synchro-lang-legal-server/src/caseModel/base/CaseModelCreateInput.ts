/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  IsOptional,
  IsString,
  MaxLength,
  ValidateNested,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { DocumentCreateNestedManyWithoutCaseModelsInput } from "./DocumentCreateNestedManyWithoutCaseModelsInput";
import { MessageCreateNestedManyWithoutCaseModelsInput } from "./MessageCreateNestedManyWithoutCaseModelsInput";
import { ReportCreateNestedManyWithoutCaseModelsInput } from "./ReportCreateNestedManyWithoutCaseModelsInput";
import { ResearchCreateNestedManyWithoutCaseModelsInput } from "./ResearchCreateNestedManyWithoutCaseModelsInput";
import { EnumCaseModelStatus } from "./EnumCaseModelStatus";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class CaseModelCreateInput {
  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  deadline?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: () => DocumentCreateNestedManyWithoutCaseModelsInput,
  })
  @ValidateNested()
  @Type(() => DocumentCreateNestedManyWithoutCaseModelsInput)
  @IsOptional()
  @Field(() => DocumentCreateNestedManyWithoutCaseModelsInput, {
    nullable: true,
  })
  documents?: DocumentCreateNestedManyWithoutCaseModelsInput;

  @ApiProperty({
    required: false,
    type: () => MessageCreateNestedManyWithoutCaseModelsInput,
  })
  @ValidateNested()
  @Type(() => MessageCreateNestedManyWithoutCaseModelsInput)
  @IsOptional()
  @Field(() => MessageCreateNestedManyWithoutCaseModelsInput, {
    nullable: true,
  })
  messages?: MessageCreateNestedManyWithoutCaseModelsInput;

  @ApiProperty({
    required: false,
    type: () => ReportCreateNestedManyWithoutCaseModelsInput,
  })
  @ValidateNested()
  @Type(() => ReportCreateNestedManyWithoutCaseModelsInput)
  @IsOptional()
  @Field(() => ReportCreateNestedManyWithoutCaseModelsInput, {
    nullable: true,
  })
  reports?: ReportCreateNestedManyWithoutCaseModelsInput;

  @ApiProperty({
    required: false,
    type: () => ResearchCreateNestedManyWithoutCaseModelsInput,
  })
  @ValidateNested()
  @Type(() => ResearchCreateNestedManyWithoutCaseModelsInput)
  @IsOptional()
  @Field(() => ResearchCreateNestedManyWithoutCaseModelsInput, {
    nullable: true,
  })
  researchItems?: ResearchCreateNestedManyWithoutCaseModelsInput;

  @ApiProperty({
    required: false,
    enum: EnumCaseModelStatus,
  })
  @IsEnum(EnumCaseModelStatus)
  @IsOptional()
  @Field(() => EnumCaseModelStatus, {
    nullable: true,
  })
  status?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;
}

export { CaseModelCreateInput as CaseModelCreateInput };

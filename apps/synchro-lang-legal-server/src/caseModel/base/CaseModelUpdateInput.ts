/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  IsOptional,
  IsString,
  MaxLength,
  ValidateNested,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { DocumentUpdateManyWithoutCaseModelsInput } from "./DocumentUpdateManyWithoutCaseModelsInput";
import { MessageUpdateManyWithoutCaseModelsInput } from "./MessageUpdateManyWithoutCaseModelsInput";
import { ReportUpdateManyWithoutCaseModelsInput } from "./ReportUpdateManyWithoutCaseModelsInput";
import { ResearchUpdateManyWithoutCaseModelsInput } from "./ResearchUpdateManyWithoutCaseModelsInput";
import { EnumCaseModelStatus } from "./EnumCaseModelStatus";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class CaseModelUpdateInput {
  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  deadline?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: () => DocumentUpdateManyWithoutCaseModelsInput,
  })
  @ValidateNested()
  @Type(() => DocumentUpdateManyWithoutCaseModelsInput)
  @IsOptional()
  @Field(() => DocumentUpdateManyWithoutCaseModelsInput, {
    nullable: true,
  })
  documents?: DocumentUpdateManyWithoutCaseModelsInput;

  @ApiProperty({
    required: false,
    type: () => MessageUpdateManyWithoutCaseModelsInput,
  })
  @ValidateNested()
  @Type(() => MessageUpdateManyWithoutCaseModelsInput)
  @IsOptional()
  @Field(() => MessageUpdateManyWithoutCaseModelsInput, {
    nullable: true,
  })
  messages?: MessageUpdateManyWithoutCaseModelsInput;

  @ApiProperty({
    required: false,
    type: () => ReportUpdateManyWithoutCaseModelsInput,
  })
  @ValidateNested()
  @Type(() => ReportUpdateManyWithoutCaseModelsInput)
  @IsOptional()
  @Field(() => ReportUpdateManyWithoutCaseModelsInput, {
    nullable: true,
  })
  reports?: ReportUpdateManyWithoutCaseModelsInput;

  @ApiProperty({
    required: false,
    type: () => ResearchUpdateManyWithoutCaseModelsInput,
  })
  @ValidateNested()
  @Type(() => ResearchUpdateManyWithoutCaseModelsInput)
  @IsOptional()
  @Field(() => ResearchUpdateManyWithoutCaseModelsInput, {
    nullable: true,
  })
  researchItems?: ResearchUpdateManyWithoutCaseModelsInput;

  @ApiProperty({
    required: false,
    enum: EnumCaseModelStatus,
  })
  @IsEnum(EnumCaseModelStatus)
  @IsOptional()
  @Field(() => EnumCaseModelStatus, {
    nullable: true,
  })
  status?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;
}

export { CaseModelUpdateInput as CaseModelUpdateInput };
